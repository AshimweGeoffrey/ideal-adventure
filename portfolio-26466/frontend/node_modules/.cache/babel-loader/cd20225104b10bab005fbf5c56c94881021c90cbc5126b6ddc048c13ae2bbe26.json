{"ast":null,"code":"import{apiService}from\"./apiService\";const portfolioService={// Get all public portfolios\ngetPublicPortfolios:async()=>{const response=await apiService.get(\"/portfolios/public\");return response.data;},// Get user's portfolios\ngetUserPortfolios:async()=>{const response=await apiService.get(\"/portfolios/user\");return response.data;},// Get single portfolio by ID\ngetPortfolio:async id=>{const response=await apiService.get(\"/portfolios/\".concat(id));return response.data;},// Create new portfolio\ncreatePortfolio:async portfolioData=>{const response=await apiService.post(\"/portfolios\",portfolioData);return response.data;},// Update portfolio\nupdatePortfolio:async(id,portfolioData)=>{const response=await apiService.put(\"/portfolios/\".concat(id),portfolioData);return response.data;},// Delete portfolio\ndeletePortfolio:async id=>{const response=await apiService.delete(\"/portfolios/\".concat(id));return response.data;}};export default portfolioService;","map":{"version":3,"names":["apiService","portfolioService","getPublicPortfolios","response","get","data","getUserPortfolios","getPortfolio","id","concat","createPortfolio","portfolioData","post","updatePortfolio","put","deletePortfolio","delete"],"sources":["/home/micro/ideal-adventure/portfolio-26466/frontend/src/services/portfolioService.js"],"sourcesContent":["import { apiService } from \"./apiService\";\n\nconst portfolioService = {\n  // Get all public portfolios\n  getPublicPortfolios: async () => {\n    const response = await apiService.get(\"/portfolios/public\");\n    return response.data;\n  },\n\n  // Get user's portfolios\n  getUserPortfolios: async () => {\n    const response = await apiService.get(\"/portfolios/user\");\n    return response.data;\n  },\n\n  // Get single portfolio by ID\n  getPortfolio: async (id) => {\n    const response = await apiService.get(`/portfolios/${id}`);\n    return response.data;\n  },\n\n  // Create new portfolio\n  createPortfolio: async (portfolioData) => {\n    const response = await apiService.post(\"/portfolios\", portfolioData);\n    return response.data;\n  },\n\n  // Update portfolio\n  updatePortfolio: async (id, portfolioData) => {\n    const response = await apiService.put(`/portfolios/${id}`, portfolioData);\n    return response.data;\n  },\n\n  // Delete portfolio\n  deletePortfolio: async (id) => {\n    const response = await apiService.delete(`/portfolios/${id}`);\n    return response.data;\n  },\n};\n\nexport default portfolioService;\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,cAAc,CAEzC,KAAM,CAAAC,gBAAgB,CAAG,CACvB;AACAC,mBAAmB,CAAE,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACI,GAAG,CAAC,oBAAoB,CAAC,CAC3D,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,iBAAiB,CAAE,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACI,GAAG,CAAC,kBAAkB,CAAC,CACzD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAE,YAAY,CAAE,KAAO,CAAAC,EAAE,EAAK,CAC1B,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACI,GAAG,gBAAAK,MAAA,CAAgBD,EAAE,CAAE,CAAC,CAC1D,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAK,eAAe,CAAE,KAAO,CAAAC,aAAa,EAAK,CACxC,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACY,IAAI,CAAC,aAAa,CAAED,aAAa,CAAC,CACpE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAQ,eAAe,CAAE,KAAAA,CAAOL,EAAE,CAAEG,aAAa,GAAK,CAC5C,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACc,GAAG,gBAAAL,MAAA,CAAgBD,EAAE,EAAIG,aAAa,CAAC,CACzE,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAU,eAAe,CAAE,KAAO,CAAAP,EAAE,EAAK,CAC7B,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAH,UAAU,CAACgB,MAAM,gBAAAP,MAAA,CAAgBD,EAAE,CAAE,CAAC,CAC7D,MAAO,CAAAL,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAJ,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}