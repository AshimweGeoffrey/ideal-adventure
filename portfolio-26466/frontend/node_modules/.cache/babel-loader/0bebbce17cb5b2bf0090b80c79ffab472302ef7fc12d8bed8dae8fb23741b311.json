{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import jwt_decode from'jwt-decode';import{apiService}from'./apiService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Check if token is valid and not expired\nconst isTokenValid=token=>{if(!token)return false;try{const decoded=jwt_decode(token);const currentTime=Date.now()/1000;return decoded.exp>currentTime;}catch(error){return false;}};useEffect(()=>{const initializeAuth=async()=>{const savedToken=localStorage.getItem('token');if(savedToken&&isTokenValid(savedToken)){setToken(savedToken);apiService.setAuthToken(savedToken);try{const response=await apiService.get('/auth/profile');setUser(response.user);}catch(error){console.error('Failed to fetch user profile:',error);logout();}}else{logout();}setLoading(false);};initializeAuth();},[]);const login=async(email,password)=>{try{const response=await apiService.post('/auth/login',{email,password});const{token:newToken,user:userData}=response;setToken(newToken);setUser(userData);localStorage.setItem('token',newToken);apiService.setAuthToken(newToken);return{success:true,user:userData};}catch(error){var _error$response,_error$response$data;return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed'};}};const register=async userData=>{try{const response=await apiService.post('/auth/register',userData);return{success:true,user:response.user};}catch(error){var _error$response2,_error$response2$data;return{success:false,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed'};}};const logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');apiService.clearAuthToken();};const generateApiKey=async()=>{try{const response=await apiService.post('/auth/generate-api-key');return{success:true,apiKey:response.apiKey};}catch(error){var _error$response3,_error$response3$data;return{success:false,message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to generate API key'};}};const revokeApiKey=async()=>{try{await apiService.delete('/auth/revoke-api-key');// Refresh user data\nconst response=await apiService.get('/auth/profile');setUser(response.user);return{success:true};}catch(error){var _error$response4,_error$response4$data;return{success:false,message:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to revoke API key'};}};const value={user,token,loading,login,register,logout,generateApiKey,revokeApiKey,isAuthenticated:!!token&&!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jwt_decode","apiService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","isTokenValid","decoded","currentTime","Date","now","exp","error","initializeAuth","savedToken","setAuthToken","response","get","console","logout","login","email","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","data","register","_error$response2","_error$response2$data","removeItem","clearAuthToken","generateApiKey","apiKey","_error$response3","_error$response3$data","revokeApiKey","delete","_error$response4","_error$response4$data","value","isAuthenticated","Provider"],"sources":["/home/micro/ideal-adventure/portfolio-26466/frontend/src/services/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { apiService } from './apiService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Check if token is valid and not expired\n  const isTokenValid = (token) => {\n    if (!token) return false;\n    \n    try {\n      const decoded = jwt_decode(token);\n      const currentTime = Date.now() / 1000;\n      return decoded.exp > currentTime;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedToken = localStorage.getItem('token');\n      \n      if (savedToken && isTokenValid(savedToken)) {\n        setToken(savedToken);\n        apiService.setAuthToken(savedToken);\n        \n        try {\n          const response = await apiService.get('/auth/profile');\n          setUser(response.user);\n        } catch (error) {\n          console.error('Failed to fetch user profile:', error);\n          logout();\n        }\n      } else {\n        logout();\n      }\n      \n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await apiService.post('/auth/login', { email, password });\n      const { token: newToken, user: userData } = response;\n\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n      apiService.setAuthToken(newToken);\n\n      return { success: true, user: userData };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await apiService.post('/auth/register', userData);\n      return { success: true, user: response.user };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    apiService.clearAuthToken();\n  };\n\n  const generateApiKey = async () => {\n    try {\n      const response = await apiService.post('/auth/generate-api-key');\n      return { success: true, apiKey: response.apiKey };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Failed to generate API key' \n      };\n    }\n  };\n\n  const revokeApiKey = async () => {\n    try {\n      await apiService.delete('/auth/revoke-api-key');\n      // Refresh user data\n      const response = await apiService.get('/auth/profile');\n      setUser(response.user);\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Failed to revoke API key' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    generateApiKey,\n    revokeApiKey,\n    isAuthenticated: !!token && !!user,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}